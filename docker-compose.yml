# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Basic Airflow cluster configuration for CeleryExecutor with Redis and PostgreSQL.
#
# WARNING: This configuration is for local development. Do not use it in a production deployment.
#
# This configuration supports basic configuration using environment variables or an .env file
# The following variables are supported:
#
# AIRFLOW_IMAGE_NAME         - Docker image name used to run Airflow.
#                              Default: apache/airflow:master-python3.8
# AIRFLOW_UID                - User ID in Airflow containers
#                              Default: 50000
# AIRFLOW_GID                - Group ID in Airflow containers
#                              Default: 50000
# _AIRFLOW_WWW_USER_USERNAME - Username for the administrator account.
#                              Default: airflow
# _AIRFLOW_WWW_USER_PASSWORD - Password for the administrator account.
#                              Default: airflow
#
# Feel free to modify this file to suit your needs.

---
version: '3'
x-airflow-common:
  &airflow-common
  build: ./.
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${_AIRFLOW_POSTGRES_USERNAME}:${_AIRFLOW_POSTGRES_PASSWORD}@postgres/airflow
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${_AIRFLOW_POSTGRES_USERNAME}:${_AIRFLOW_POSTGRES_PASSWORD}@postgres/airflow
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW__CORE__DEFAULT_TIMEZONE: 'Asia/Jakarta'
    AIRFLOW__SMTP__SMTP_HOST: "${AIRFLOW_SMTP_HOST}"
    AIRFLOW__SMTP__SMTP_PORT: "${AIRFLOW_SMTP_PORT}"
    AIRFLOW__SMTP__SMTP_USER: "${AIRFLOW_SMTP_USER}"
    AIRFLOW__SMTP__SMTP_PASSWORD: "${AIRFLOW_SMTP_PASSWORD}"
    AIRFLOW__SMTP__SMTP_MAIL_FROM: "${AIRFLOW_SMTP_MAIL_FROM}"
    AIRFLOW__WEBSERVER__BASE_URL: "${AIRFLOW_WEBSERVER_BASE_URL}"
    AIRFLOW_CONN_MTU_PLANT1_MSSQL_DB: "${AIRFLOW_CONN_MTU_PLANT1_MSSQL_DB}"
    AIRFLOW_CONN_MTU_PLANT2_MSSQL_DB: "${AIRFLOW_CONN_MTU_PLANT2_MSSQL_DB}"
    AIRFLOW_CONN_PRD_DATABASE_REPLICA_PG_DB: "${AIRFLOW_CONN_PRD_DATABASE_REPLICA_PG_DB}"
    AIRFLOW__CORE__ENABLE_XCOM_PICKLING: 'true'

  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./secret:/opt/airflow/secret

  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${_AIRFLOW_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${_AIRFLOW_POSTGRES_PASSWORD}
      POSTGRES_DB: airflow
    ports:
      - ${AIRFLOW_POSTGRES_EXTERNAL_PORT:-5432}:5432
    volumes:
      - ./postgres_metadata_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - ${AIRFLOW_WEBSERVER_PORT:-58080}:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-init:
    <<: *airflow-common
    command: version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
  
  airflow-import-connections:
    <<: *airflow-common
    command: connections import /opt/airflow/secret/connections.yaml

  airflow-import-variables:
    <<: *airflow-common
    command: variables import /opt/airflow/secret/variables.json
